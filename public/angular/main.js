!function(){angular.module("general",[])}(),function(){angular.module("user",[]).run(["$http","Session",function($http,Session){$http.get("/profile").success(function(res){Session.create(res)}).error(function(res){Session.setCurrentUser({user:"hello"})})}])}(),function(){var app=angular.module("grader",["ui.router","general","user"]);app.config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0)}]),app.run(["$rootScope","AuthService",function($rootScope,AuthService){$rootScope.$on("$stateChangeStart",function(event,next){console.log("auth: "+AuthService.isAuthenticated())})}])}(),function(){angular.module("general").controller("NavController",["$http","AuthService",function($http,AuthService){this.bLoggedIn=AuthService.isAuthenticated()}])}(),function(){angular.module("general").config(["$stateProvider",function($stateProvider){$stateProvider.state("index",{url:"/",resolve:{auth:["AuthResolver",function(AuthResolver){return AuthResolver.resolve()}]},controller:["$state","AuthService",function($state,AuthService){AuthService.isAuthenticated()?$state.go("dashboard"):$state.go("public")}]}),$stateProvider.state("public",{url:"/",templateUrl:"/angular/general/index.general.html"})}])}(),function(){angular.module("user").controller("LoginController",["$state","$rootScope","AuthService",function($state,$rootScope,AuthService){var root=this;this.authMessage="",this.user={username:"",password:""},this.login=function(){AuthService.login(root.user).then(function(res){$state.go("profile")},function(res){root.authMessage=res.data.userMessage})}}]),angular.module("user").controller("DashboardController",["$state","Session",function($state,Session){this.user=Session.user}]),angular.module("user").controller("ProfileController",["$state","Session",function($state,Session){this.user=Session.user}])}(),function(){angular.module("user").config(["$stateProvider",function($stateProvider){$stateProvider.state("login",{url:"/login",templateUrl:"/angular/user/auth.user.html",controller:"LoginController",controllerAs:"loginCtrl"}),$stateProvider.state("dashboard",{url:"",templateUrl:"/angular/user/dashboard.html",controller:"DashboardController",controllerAs:"dashboardCtrl"}),$stateProvider.state("profile",{url:"/profile",templateUrl:"/angular/user/profile.user.html",controller:"ProfileController",controllerAs:"profileCtrl"})}])}(),function(){angular.module("user").factory("AuthService",["$http","Session",function($http,Session){var authService={};return authService.login=function(credentials){return $http.post("/auth/local",credentials).then(function(res){return Session.create(res.data),res.data})},authService.isAuthenticated=function(){return Session.live()},authService}]),angular.module("user").service("Session",["$rootScope",function($rootScope){var root=this;this.user={},this.live=function(){return Object.keys(root.user).length>0},this.setCurrentUser=function(user){$rootScope.currentUser=user},this.create=function(user){$rootScope.currentUser=user,root.user=user},this.destroy=function(){$rootScope.currentUser=null,root.user=null}}]),angular.module("user").factory("AuthResolver",["$q","$rootScope","$state",function($q,$rootScope,$state){return{resolve:function(){var deferred=$q.defer(),unwatch=$rootScope.$watch("currentUser",function(currentUser){angular.isDefined(currentUser)&&(currentUser?deferred.resolve(currentUser):(deferred.reject(),$state.go("login")),unwatch())});return deferred.promise}}}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYWwvZ2VuZXJhbC5tb2R1bGUuanMiLCJ1c2VyL3VzZXIubW9kdWxlLmpzIiwiY29yZS5qcyIsImdlbmVyYWwvZ2VuZXJhbC5jdHJsLmpzIiwiZ2VuZXJhbC9nZW5lcmFsLnJvdXRlcy5qcyIsInVzZXIvdXNlci5jdHJsLmpzIiwidXNlci91c2VyLnJvdXRlcy5qcyIsInVzZXIvdXNlci5zdmMuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsInJ1biIsIiRodHRwIiwiU2Vzc2lvbiIsImdldCIsInN1Y2Nlc3MiLCJyZXMiLCJjcmVhdGUiLCJlcnJvciIsInNldEN1cnJlbnRVc2VyIiwidXNlciIsImFwcCIsImNvbmZpZyIsIiRsb2NhdGlvblByb3ZpZGVyIiwiaHRtbDVNb2RlIiwiJHJvb3RTY29wZSIsIkF1dGhTZXJ2aWNlIiwiJG9uIiwiZXZlbnQiLCJuZXh0IiwiY29uc29sZSIsImxvZyIsImlzQXV0aGVudGljYXRlZCIsImNvbnRyb2xsZXIiLCJ0aGlzIiwiYkxvZ2dlZEluIiwiJHN0YXRlUHJvdmlkZXIiLCJzdGF0ZSIsInVybCIsInJlc29sdmUiLCJhdXRoIiwiQXV0aFJlc29sdmVyIiwiJHN0YXRlIiwiZ28iLCJ0ZW1wbGF0ZVVybCIsInJvb3QiLCJhdXRoTWVzc2FnZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJsb2dpbiIsInRoZW4iLCJkYXRhIiwidXNlck1lc3NhZ2UiLCJjb250cm9sbGVyQXMiLCJmYWN0b3J5IiwiYXV0aFNlcnZpY2UiLCJjcmVkZW50aWFscyIsInBvc3QiLCJsaXZlIiwic2VydmljZSIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJjdXJyZW50VXNlciIsImRlc3Ryb3kiLCIkcSIsImRlZmVycmVkIiwiZGVmZXIiLCJ1bndhdGNoIiwiJHdhdGNoIiwiaXNEZWZpbmVkIiwicmVqZWN0IiwicHJvbWlzZSJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDQUEsUUFBQUMsT0FBQSxpQkNEQSxXQUNBRCxRQUFBQyxP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c0MsWUFBQTNDLEtBQ0F5QixLQUFBekIsS0FBQUEsTUFFQWMsS0FBQThCLFFBQUEsV0FDQXZDLFdBQUFzQyxZQUFBLEtBQ0FsQixLQUFBekIsS0FBQSxTQUlBWCxRQUFBQyxPQUFBLFFBQUE0QyxRQUFBLGdCQUFBLEtBQUEsYUFBQSxTQUFBLFNBQUFXLEdBQUF4QyxXQUFBaUIsUUFDQSxPQUNBSCxRQUFBLFdBQ0EsR0FBQTJCLFVBQUFELEdBQUFFLFFBQ0FDLFFBQUEzQyxXQUFBNEMsT0FBQSxjQUFBLFNBQUFOLGFBQ0F0RCxRQUFBNkQsVUFBQVAsZUFDQUEsWUFDQUcsU0FBQTNCLFFBQUF3QixjQUVBRyxTQUFBSyxTQUNBN0IsT0FBQUMsR0FBQSxVQUVBeUIsWUFHQSxPQUFBRixVQUFBTSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7XHJcblx0dmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdnZW5lcmFsJywgW10pO1xyXG59KSgpOyIsIihmdW5jdGlvbigpe1xyXG5cdHZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgndXNlcicsIFtdKVxyXG5cdC5ydW4oZnVuY3Rpb24oJGh0dHAsIFNlc3Npb24pe1xyXG5cdFx0JGh0dHAuZ2V0KCcvcHJvZmlsZScpXHJcblx0XHQuc3VjY2VzcyhmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRTZXNzaW9uLmNyZWF0ZShyZXMpO1xyXG5cdFx0fSlcclxuXHRcdC5lcnJvcihmdW5jdGlvbihyZXMpe1xyXG5cdFx0XHRTZXNzaW9uLnNldEN1cnJlbnRVc2VyKHt1c2VyOidoZWxsbyd9KTtcclxuXHRcdH0pO1xyXG5cdH0pO1xyXG59KSgpOyIsIihmdW5jdGlvbigpe1xyXG5cdHZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnZ3JhZGVyJywgXHJcblx0XHRbXHJcblx0XHRcdCd1aS5yb3V0ZXInLFxyXG5cdFx0XHQnZ2VuZXJhbCcsXHJcblx0XHRcdCd1c2VyJ1xyXG5cdFx0XSk7XHJcblxyXG5cdC8vcmVtb3ZlIHRoZSBoYXNoXHJcblx0YXBwLmNvbmZpZyhbJyRsb2NhdGlvblByb3ZpZGVyJywgZnVuY3Rpb24oJGxvY2F0aW9uUHJvdmlkZXIpe1xyXG5cdFx0JGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHRydWUpO1xyXG5cdH1dKTtcclxuXHRcclxuXHRhcHAucnVuKGZ1bmN0aW9uICgkcm9vdFNjb3BlLCBBdXRoU2VydmljZSkge1xyXG4gIFx0XHQkcm9vdFNjb3BlLiRvbignJHN0YXRlQ2hhbmdlU3RhcnQnLCBmdW5jdGlvbiAoZXZlbnQsIG5leHQpIHtcclxuICBcdFx0XHRjb25zb2xlLmxvZygnYXV0aDogJyArIEF1dGhTZXJ2aWNlLmlzQXV0aGVudGljYXRlZCgpKTtcclxuICBcdFx0fSk7XHJcblx0fSlcclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCl7XHJcblx0YW5ndWxhci5tb2R1bGUoJ2dlbmVyYWwnKS5jb250cm9sbGVyKCdOYXZDb250cm9sbGVyJywgZnVuY3Rpb24oJGh0dHAsIEF1dGhTZXJ2aWNlKXtcclxuXHRcdHZhciByb290ID0gdGhpcztcclxuXHRcdHRoaXMuYkxvZ2dlZEluID0gQXV0aFNlcnZpY2UuaXNBdXRoZW50aWNhdGVkKCk7XHJcblx0fSk7XHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCl7XHJcblx0YW5ndWxhci5tb2R1bGUoJ2dlbmVyYWwnKS5jb25maWcoWyckc3RhdGVQcm92aWRlcicsIGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyKXtcclxuXHRcdCRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdpbmRleCcsIHtcclxuXHRcdFx0dXJsOiAnLycsXHJcblx0XHRcdHJlc29sdmU6IHtcclxuXHRcdFx0XHRhdXRoOiBmdW5jdGlvbiByZXNvbHZlQXV0aGVudGljYXRpb24oQXV0aFJlc29sdmVyKSB7IFxyXG5cdFx0XHRcdFx0cmV0dXJuIEF1dGhSZXNvbHZlci5yZXNvbHZlKCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRjb250cm9sbGVyOiBmdW5jdGlvbigkc3RhdGUsIEF1dGhTZXJ2aWNlKXtcclxuXHRcdFx0XHRpZiAoQXV0aFNlcnZpY2UuaXNBdXRoZW50aWNhdGVkKCkpe1xyXG5cdFx0XHRcdFx0JHN0YXRlLmdvKCdkYXNoYm9hcmQnKTtcclxuXHRcdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRcdCRzdGF0ZS5nbygncHVibGljJyk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHJcblx0XHQkc3RhdGVQcm92aWRlci5zdGF0ZSgncHVibGljJywge1xyXG5cdFx0XHR1cmw6ICcvJyxcclxuXHRcdFx0dGVtcGxhdGVVcmw6ICcvYW5ndWxhci9nZW5lcmFsL2luZGV4LmdlbmVyYWwuaHRtbCdcclxuXHRcdH0pO1xyXG5cdH1dKTtcclxufSkoKTsiLCIoZnVuY3Rpb24oKXtcclxuXHJcblx0YW5ndWxhci5tb2R1bGUoJ3VzZXInKS5jb250cm9sbGVyKCdMb2dpbkNvbnRyb2xsZXInLCBmdW5jdGlvbigkc3RhdGUsICRyb290U2NvcGUsIEF1dGhTZXJ2aWNlKXtcclxuXHRcdHZhciByb290ID0gdGhpcztcclxuXHRcdHRoaXMuYXV0aE1lc3NhZ2UgPSAnJztcclxuXHRcdHRoaXMudXNlciA9IHtcclxuXHRcdFx0dXNlcm5hbWU6ICcnLFxyXG5cdFx0XHRwYXNzd29yZDogJydcclxuXHRcdH07XHJcblxyXG5cdFx0dGhpcy5sb2dpbiA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRBdXRoU2VydmljZS5sb2dpbihyb290LnVzZXIpLnRoZW4oXHJcblx0XHRcdFx0ZnVuY3Rpb24ocmVzKXtcclxuXHRcdFx0XHRcdCRzdGF0ZS5nbygncHJvZmlsZScpO1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0ZnVuY3Rpb24ocmVzKXtcclxuXHRcdFx0XHRcdHJvb3QuYXV0aE1lc3NhZ2UgPSByZXMuZGF0YS51c2VyTWVzc2FnZTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdH07XHJcblx0fSk7XHJcblx0XHJcblx0YW5ndWxhci5tb2R1bGUoJ3VzZXInKS5jb250cm9sbGVyKCdEYXNoYm9hcmRDb250cm9sbGVyJywgZnVuY3Rpb24oJHN0YXRlLCBTZXNzaW9uKXtcclxuXHRcdHRoaXMudXNlciA9IFNlc3Npb24udXNlcjtcclxuXHR9KTtcclxuXHJcblx0YW5ndWxhci5tb2R1bGUoJ3VzZXInKS5jb250cm9sbGVyKCdQcm9maWxlQ29udHJvbGxlcicsIGZ1bmN0aW9uKCRzdGF0ZSwgU2Vzc2lvbil7XHJcblx0XHR0aGlzLnVzZXIgPSBTZXNzaW9uLnVzZXI7XHJcblx0fSk7XHJcbn0pKCk7IiwiKGZ1bmN0aW9uKCl7XHJcblx0YW5ndWxhci5tb2R1bGUoJ3VzZXInKS5jb25maWcoWyckc3RhdGVQcm92aWRlcicsIGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyKXtcclxuXHRcdCRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdsb2dpbicsIHtcclxuXHRcdFx0dXJsOiAnL2xvZ2luJyxcclxuXHRcdFx0dGVtcGxhdGVVcmw6ICcvYW5ndWxhci91c2VyL2F1dGgudXNlci5odG1sJyxcclxuXHRcdFx0Y29udHJvbGxlcjogJ0xvZ2luQ29udHJvbGxlcicsXHJcblx0XHRcdGNvbnRyb2xsZXJBczogJ2xvZ2luQ3RybCdcclxuXHRcdH0pO1xyXG5cclxuXHRcdCRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdkYXNoYm9hcmQnLCB7XHJcblx0XHRcdHVybDogJycsXHJcblx0XHRcdHRlbXBsYXRlVXJsOiAnL2FuZ3VsYXIvdXNlci9kYXNoYm9hcmQuaHRtbCcsXHJcblx0XHRcdGNvbnRyb2xsZXI6ICdEYXNoYm9hcmRDb250cm9sbGVyJyxcclxuXHRcdFx0Y29udHJvbGxlckFzOiAnZGFzaGJvYXJkQ3RybCdcclxuXHRcdH0pO1xyXG5cclxuXHRcdCRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdwcm9maWxlJywge1xyXG5cdFx0XHR1cmw6ICcvcHJvZmlsZScsXHJcblx0XHRcdHRlbXBsYXRlVXJsOiAnL2FuZ3VsYXIvdXNlci9wcm9maWxlLnVzZXIuaHRtbCcsXHJcblx0XHRcdGNvbnRyb2xsZXI6ICdQcm9maWxlQ29udHJvbGxlcicsXHJcblx0XHRcdGNvbnRyb2xsZXJBczogJ3Byb2ZpbGVDdHJsJ1xyXG5cdFx0fSk7XHJcblx0fV0pO1xyXG59KSgpOyIsIihmdW5jdGlvbigpe1xyXG5cdGFuZ3VsYXIubW9kdWxlKCd1c2VyJykuZmFjdG9yeSgnQXV0aFNlcnZpY2UnLCBmdW5jdGlvbiAoJGh0dHAsIFNlc3Npb24pIHtcclxuXHRcdHZhciBhdXRoU2VydmljZSA9IHt9O1xyXG5cclxuXHRcdGF1dGhTZXJ2aWNlLmxvZ2luID0gZnVuY3Rpb24gKGNyZWRlbnRpYWxzKSB7XHJcblx0XHRcdHJldHVybiAkaHR0cFxyXG5cdFx0XHQucG9zdCgnL2F1dGgvbG9jYWwnLCBjcmVkZW50aWFscylcclxuXHRcdFx0LnRoZW4oZnVuY3Rpb24gKHJlcykge1xyXG5cdFx0XHRcdFNlc3Npb24uY3JlYXRlKHJlcy5kYXRhKTtcclxuXHRcdFx0XHRyZXR1cm4gcmVzLmRhdGE7XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHJcblx0XHRhdXRoU2VydmljZS5pc0F1dGhlbnRpY2F0ZWQgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdHJldHVybiBTZXNzaW9uLmxpdmUoKTtcclxuXHRcdH07XHJcblxyXG5cdFx0cmV0dXJuIGF1dGhTZXJ2aWNlO1xyXG5cdH0pO1xyXG5cclxuXHRhbmd1bGFyLm1vZHVsZSgndXNlcicpLnNlcnZpY2UoJ1Nlc3Npb24nLCBmdW5jdGlvbiAoJHJvb3RTY29wZSkge1xyXG5cdFx0dmFyIHJvb3QgPSB0aGlzO1xyXG5cdFx0dGhpcy51c2VyID0ge307XHJcblxyXG5cdFx0dGhpcy5saXZlID0gZnVuY3Rpb24oKXtcclxuXHRcdFx0cmV0dXJuIChPYmplY3Qua2V5cyhyb290LnVzZXIpLmxlbmd0aCA+IDApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMuc2V0Q3VycmVudFVzZXIgPSBmdW5jdGlvbih1c2VyKXtcclxuXHRcdFx0JHJvb3RTY29wZS5jdXJyZW50VXNlciA9IHVzZXI7XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5jcmVhdGUgPSBmdW5jdGlvbih1c2VyKXtcclxuXHRcdFx0JHJvb3RTY29wZS5jdXJyZW50VXNlciA9IHVzZXI7XHJcblx0XHRcdHJvb3QudXNlciA9IHVzZXI7XHJcblx0XHR9O1xyXG5cdFx0dGhpcy5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHQkcm9vdFNjb3BlLmN1cnJlbnRVc2VyID0gbnVsbDtcclxuXHRcdFx0cm9vdC51c2VyID0gbnVsbDtcclxuXHRcdH07XHJcblx0fSk7XHJcblxyXG5cdGFuZ3VsYXIubW9kdWxlKCd1c2VyJykuZmFjdG9yeSgnQXV0aFJlc29sdmVyJywgZnVuY3Rpb24oJHEsICRyb290U2NvcGUsICRzdGF0ZSkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0cmVzb2x2ZTogZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XHJcblx0XHRcdFx0dmFyIHVud2F0Y2ggPSAkcm9vdFNjb3BlLiR3YXRjaCgnY3VycmVudFVzZXInLCBmdW5jdGlvbiAoY3VycmVudFVzZXIpIHtcclxuXHRcdFx0XHRcdGlmIChhbmd1bGFyLmlzRGVmaW5lZChjdXJyZW50VXNlcikpIHtcclxuXHRcdFx0XHRcdFx0aWYgKGN1cnJlbnRVc2VyKSB7XHJcblx0XHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShjdXJyZW50VXNlcik7XHJcblx0XHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0KCk7XHJcblx0XHRcdFx0XHRcdFx0JHN0YXRlLmdvKCdsb2dpbicpO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdHVud2F0Y2goKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRyZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9KTtcclxufSkoKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
