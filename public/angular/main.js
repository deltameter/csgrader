!function(){angular.module("courses",[])}(),function(){angular.module("general",[])}(),function(){angular.module("user",[]).run(["$http","Session",function($http,Session){$http.get("/api/profile").success(function(res){Session.create(res)}).error(function(res){Session.setCurrentUser({})})}])}(),angular.module("angularSlideables",[]).directive("slideable",function(){return{restrict:"C",compile:function(element,attr){var contents=element.html();return element.html('<div class="slideable_content" style="margin:0 !important; padding:0 !important" >'+contents+"</div>"),function(scope,element,attrs){attrs.duration=attrs.duration?attrs.duration:"1s",attrs.easing=attrs.easing?attrs.easing:"ease-in-out",element.css({overflow:"hidden",height:"0px",transitionProperty:"height",transitionDuration:attrs.duration,transitionTimingFunction:attrs.easing})}}}}).directive("slideToggle",function(){return{restrict:"A",link:function(scope,element,attrs){var target,content;attrs.expanded=!1,element.bind("click",function(){if(target||(target=document.querySelector(attrs.slideToggle)),content||(content=target.querySelector(".slideable_content")),attrs.expanded)target.style.height="0px";else{content.style.border="1px solid rgba(0,0,0,0)";var y=content.clientHeight;content.style.border=0,target.style.height=y+"px"}attrs.expanded=!attrs.expanded})}}}),function(){var app=angular.module("grader",["ui.router","general","courses","user"]);app.config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0)}]),app.run(["$rootScope","AuthService","AuthResolver",function($rootScope,AuthService,AuthResolver){$rootScope.$on("$stateChangeStart",function(event,next){AuthResolver.bIsResolved()?(console.log("stateChangeStart resolved"),console.log("auth: "+AuthService.isAuthenticated())):AuthResolver.resolve().then(function(data){console.log("stateChangeStart not resolved"),console.log("auth: "+AuthService.isAuthenticated())})})}])}(),function(){angular.module("user").controller("DashboardController",["$state","$http","CourseService","Session",function($state,$http,CourseService,Session){var root=this;root.newCourse={},root.courses=[],root.user=Session.user;var getCourses=function(){$http.get("/api/profile/courses").then(function(res){root.courses=res.data,console.log(res.data)})};this.createCourse=function(){CourseService.createCourse(root.newCourse).then(function(res){console.log(res)})},getCourses()}])}(),function(){angular.module("user").config(["$stateProvider",function($stateProvider){$stateProvider.state("root.dashboard",{templateUrl:"/angular/courses/partials/dashboard.html",controller:"DashboardController",controllerAs:"dashboardCtrl"})}])}(),function(){angular.module("courses").factory("CourseService",["$http","Session",function($http,Session){var courseService={};return courseService.createCourse=function(newCourse){return $http.post("/api/course/create",newCourse).then(function(res){return res.data},function(res){return res.data})},courseService}])}(),function(){angular.module("general").controller("NavController",["$http","AuthService","AuthResolver","$state",function($http,AuthService,AuthResolver,$state){var root=this;this.$state=$state,this.bLoggedIn=null,AuthResolver.bIsResolved()?root.bLoggedIn=AuthService.isAuthenticated():AuthResolver.resolve().then(function(){root.bLoggedIn=AuthService.isAuthenticated()})}])}(),function(){angular.module("general").config(["$stateProvider",function($stateProvider){$stateProvider.state("root",{"abstract":!0,template:"<ui-view/>",resolve:{auth:["AuthResolver",function(AuthResolver){return AuthResolver.bIsResolved()===!0||AuthResolver.resolve()}]}}).state("root.main",{url:"/",template:"<ui-view/>",controller:["$state","AuthService",function($state,AuthService){console.log("hi"),AuthService.isAuthenticated()?$state.go("root.dashboard"):$state.go("root.public")}]}).state("root.public",{templateUrl:"/angular/general/partials/index.html"})}])}(),function(){angular.module("user").controller("LoginController",["$state","$rootScope","AuthService",function($state,$rootScope,AuthService){var root=this;this.authMessage="",this.user={email:"",password:""},this.login=function(){AuthService.login(root.user).then(function(res){$state.go("root.main")},function(res){root.authMessage=res.data.userMessage})}}]),angular.module("user").controller("JoinController",["$state","$rootScope","AuthService",function($state,$rootScope,AuthService){var root=this;this.authMessage="",this.user={firstName:"",lastName:"",retypePassword:"",password:"",email:"",accountType:""},this.signup=function(){AuthService.signup(root.user).then(function(res){$state.go("root.main")},function(res){root.authMessage=res.data.userMessage})}}]),angular.module("user").controller("ProfileController",["$state","Session",function($state,Session){this.user=Session.user}])}(),function(){angular.module("user").config(["$stateProvider",function($stateProvider){$stateProvider.state("root.login",{url:"/login",templateUrl:"/angular/user/partials/login.html",controller:"LoginController",controllerAs:"loginCtrl"}),$stateProvider.state("root.join",{url:"/join",templateUrl:"/angular/user/partials/join.html",controller:"JoinController",controllerAs:"joinCtrl"}),$stateProvider.state("root.profile",{url:"/profile",templateUrl:"/angular/user/partials/profile.html",controller:"ProfileController",controllerAs:"profileCtrl"})}])}(),function(){angular.module("user").factory("AuthService",["$http","Session",function($http,Session){var authService={};return authService.login=function(credentials){return $http.post("/auth/local",credentials).then(function(res){return Session.create(res.data),res.data})},authService.signup=function(newUser){return $http.post("/api/user/join",newUser).then(function(res){return console.log(res.data),Session.create(res.data),res.data},function(res){return res.data})},authService.isAuthenticated=function(){return Session.live()},authService}]),angular.module("user").service("Session",["$rootScope",function($rootScope){var root=this;this.user={},this.live=function(){return Object.keys(root.user).length>0},this.setCurrentUser=function(user){$rootScope.currentUser=user,root.user=user},this.create=function(user){$rootScope.currentUser=user,root.user=user},this.destroy=function(){$rootScope.currentUser=null,root.user=null}}]),angular.module("user").factory("AuthResolver",["$q","$rootScope","$state",function($q,$rootScope,$state){var bIsResolved=!1;return{resolve:function(){var deferred=$q.defer(),unwatch=$rootScope.$watch("currentUser",function(currentUser){angular.isDefined(currentUser)&&(currentUser?deferred.resolve(currentUser):deferred.reject(),bIsResolved=!0,unwatch())});return deferred.promise},bIsResolved:function(){return bIsResolved}}}])}();
//# sourceMappingURL=data:application/json;base64,
